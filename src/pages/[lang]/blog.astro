---
import Layout from '../../layouts/Layout.astro';
import BlogPost from '../../components/BlogPost.astro';

import { getCollection } from 'astro:content';
import { languages } from '../../i18n/ui';
interface Post {
  slug: string;
  data: {
    title: string;
    date: string;
    draft?: boolean;
  };
}

interface FormattedPost extends Post {
  url: string;
  formattedDate: string;
}

const { lang } = Astro.params;
const posts = await getCollection('blog', ({ id, data }) => {
  return data.draft !== true && id.startsWith(lang + '/');
});

const urlPrefix = '/' + lang + '/blog/';

const formattedPosts = posts.map((post) => {
  const url = urlPrefix + post.slug.replace(lang + '/', '');
  const formattedDate = new Date(post.data.date).toLocaleDateString(lang, {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
  });
  return { ...post, url, formattedDate };
}).sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()); // Trie les articles par date dÃ©croissante


export function getStaticPaths() {
  return Object.keys(languages).map((lang) => {
    return { params: { lang } };
  });
}
---

<Layout title="Blog">
  <div>
    <h1>Blog</h1>
    <div>
      {formattedPosts.map((post) => (
        <BlogPost
          key={post.slug}
          title={post.data.title}
          date={post.formattedDate}
          slug={post.url}
        />
      ))}
    </div>
  </div>
</Layout>
